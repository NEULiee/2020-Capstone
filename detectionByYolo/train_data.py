# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RSEhcV2CWQRLawqyqYPoL85Ags5iabyA
"""



# Commented out IPython magic to ensure Python compatibility.
# %cd ..
from google.colab import drive
drive.mount('/content/gdrive')

from google.colab import drive
drive.mount('/content/drive')

#makefile
!sed -i 's/OPENCV=0/OPENCV=1/' Makefile
!sed -i 's/GPU=0/GPU=1/' Makefile
!sed -i 's/CUDNN=0/CUDNN=1/' Makefile

# make darknet (build)
!make



def imShow(path):
  import cv2
  import matplotlib.pyplot as plt
#   %matplotlib inline

  image = cv2.imread(path)
  height, width = image.shape[:2]
  resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)

  fig = plt.gcf()
  fig.set_size_inches(18, 10)
  plt.axis("off")
  plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
  plt.show()

# upload
def upload():
  from google.colab import files
  uploaded = files.upload() 
  for name, data in uploaded.items():
    with open(name, 'wb') as f:
      f.write(data)
      print ('saved file', name)

# download
def download(path):
  from google.colab import files
  files.download(path)

rm -r /home/pi/darknet/data/__MACOSX

#dataset
!unzip /content/drive/My\ Drive/yolov3/obj.zip -d /home/pi/darknet/data/

# upload pretrained convolutional layer weights
!wget http://pjreddie.com/media/files/darknet53.conv.74


# split dataset
from glob import glob
img_list = glob('/home/pi/darknet/data/obj/*.jpg')
print(len(img_list))

from sklearn.model_selection import train_test_split

train_img_list, val_img_list = train_test_split(img_list, test_size=0.2)
print(len(train_img_list), len(val_img_list))

with open('/home/pi/darknet/data/obj/a_train.txt','w') as f:
  f.write('\n'.join(train_img_list)+ '\n')

with open('/home/pi/darknet/data/obj/a_val.txt','w') as f:
  f.write('\n'.join(val_img_list)+ '\n')

"""// train code"""

!./darknet/darknet detector test /darknet/data/obj/a_obj.data /content/gdrive/My\ Drive/yolov3/yolov3_custom2.cfg darknet53.conv.74 -dont_show

imShow('predictions.jpg')

"""//  test code test"""

# run your custom detector with this command (upload an image to your google drive to test, thresh flag sets accuracy that detection must be in order to show it)
!./darknet/darknet detector test  /darknet/data/obj/a_obj.data  /darknet/cfg/yolov3_custom2.cfg /darknet/backup/yolov3_custom2_20000.weights /content/gdrive/My\ Drive/test.jpg -thresh 0.3
imShow('predictions.jpg')

# Commented out IPython magic to ensure Python compatibility.
# %cd /darknet/cfg
!sed -i 's/batch=64/batch=1/' yolov3_custom2.cfg
!sed -i 's/subdivisions=16/subdivisions=1/' yolov3_custom2.cfg
# %cd ..



"""// 웹캠 test"""

!./darknet detector demo /darknet/data/obj/a_obj.data /darknet/cfg/yolov3_custom2.cfg /darknet/backup/yolov3_custom2_last.weights

# run your custom detector with this command (upload an image to your google drive to test, thresh flag sets accuracy that detection must be in order to show it)
!./darknet detector test /darknet/data/obj/a_obj.data /darknet/cfg/yolov3_custom2.cfg  /darknet/backup/yolov3_custom2_last.weights /content/gdrive/My\ Drive/0.jpg -thresh 0.3
imShow('predictions.jpg')
